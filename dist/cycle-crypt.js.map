{"version":3,"file":"cycle-crypt.js","sources":["../lib/string.js","../lib/randomBytes.js","../cycle-crypt.js"],"sourcesContent":["/*requires Uint8Array*/\n/*globals escape, unescape, encodeURI, decodeURIComponent, btoa*/\n\nconst chr = String.fromCharCode;\n\nfunction ord(chr) {\n    return chr.charCodeAt(0);\n}\n\nexport function buffer2bin(buf) {\n    if(buf.BYTES_PER_ELEMENT > 1) {\n        buf = new Uint8Array(buf.buffer);\n    }\n    return chr.apply(String, buf);\n}\n\nexport function buffer2hex(buf) {\n    const bpe = buf.BYTES_PER_ELEMENT << 1;\n    return buf.reduce((r, c) => r += (c >>> 0).toString(16).padStart(bpe,'0'), '');\n}\n\nexport function buffer2str(buf, asUtf8) {\n    if(typeof buf == 'string') return buf;\n    buf = buffer2bin(buf);\n    if (asUtf8 !== false && !isASCII(buf)) {\n        if(asUtf8) {\n            buf = utf8Decode(buf);\n        } else if(asUtf8 == undefined) {\n            try {\n                buf = utf8Decode(buf);\n            } catch(err) {}\n        }\n    }\n    return buf;\n}\n\nexport function str2buffer(str, asUtf8) {\n    if(asUtf8 == undefined) {\n        // Some guessing\n        asUtf8 = hasMultibyte(str); // || !isASCII(str)\n    }\n    if (asUtf8) {\n        str = utf8Encode(str);\n    }\n    return new Uint8Array(str.split('').map(ord));\n}\n\n/**\n * This method is a replacement of Buffer.toString(enc)\n * for Browser, where Buffer is not available.\n *\n * @param   {String}  enc  'binary' | 'hex' | 'base64' | 'utf8' | undefined\n *\n * @return  {String}\n */\nexport function toString(enc) {\n    // The Node.js equivalent would be something like:\n    // if(typeof Buffer == 'function') {\n    //     if(enc === false) enc = 'binary';\n    //     if(enc === true) enc = 'utf8';\n    //     return Buffer.from(this.buffer).toString(enc);\n    // }\n    switch(enc) {\n        case false:\n        case 'binary': return buffer2bin(this);\n        case 'hex': return buffer2hex(this);\n        case 'base64': return btoa(buffer2bin(this));\n        case 'utf8': enc = true; break;\n    }\n    return buffer2str(this, enc);\n}\n\nconst hasMultibyteRE = /([^\\x00-\\xFF]+)/;\nconst isASCIIRE = /^[\\x00-\\x7F]+$/;\n\nexport function hasMultibyte(str) {\n    let m = hasMultibyteRE.exec(str);\n    return m ? m[1] : false;\n}\n\nexport function isASCII(str) {\n    return isASCIIRE.test(str);\n}\n\nexport function utf8Encode(str) {\n    return unescape(encodeURI(str));\n}\n\nexport function utf8Decode(str) {\n    return decodeURIComponent(escape(str));\n}\n","/*requires Uint8Array, Uint32Array*/\n\nimport { toString } from \"./string\";\n\nexport default function randomBytes(size) {\n    const bits = -1 >>> 0;\n\n    let len = size & 3;\n    len = len ? size + 4 - len : size;\n    let ret = new Uint8Array(len);\n    const words = new Uint32Array(ret.buffer);\n    let ent = Date.now();\n\n    len >>= 2;\n    while (len--) {\n        words[len] =\n        ent ^= Math.random() * bits;\n    }\n\n    if(ret.length > size) {\n        ret = ret.slice(0, size);\n    }\n\n    ret.toString = toString;\n    return ret;\n}\n","// ---------------------------------------------------------------\n/*requires Uint8Array, Uint32Array*/\n// ---------------------------------------------------------------\nimport randomBytes from './lib/randomBytes';\nimport { str2buffer, buffer2str, toString } from './lib/string';\n\n// const INT32_MASK = -1 >>> 0;\ncycleCrypt.randomBytes = randomBytes;\ncycleCrypt.str2buffer = str2buffer;\n\n// ---------------------------------------------------------------\n/**\n * Simple encryption using xor, a key and salt.\n *\n * @param   string|Uint8Array  $key   The encryption key\n * @param   string|Uint8Array  $data  Data to encrypt\n * @param   string|Uint8Array|bool $salt\n *              If a string, use it as salt.\n *              If TRUE, generate salt and prepend it to the encrypted data.\n *              If FALSE, get the salt from the data.\n *\n * @return  Uint8Array  The encrypted data. If $salt is TRUE, the generated salt is prepended to the result.\n */\nexport default function cycleCrypt(key, data, salt = true) {\n    key = str2buf(key);\n    data = typeof data == 'string' ? str2buffer(data) : data;\n    let dataLen = data.byteLength;\n\n    let ret;\n    if (salt === true) {\n        ret = randomBytes(Math.min(256, key.byteLength * 2 + 1) + dataLen);\n        ret[0] = ret.length - 1 - dataLen;\n        salt = ret.slice(1, 1 + ret[0]);\n    }\n    else {\n        if (salt === false) {\n            let i = data[0];\n            salt = data.slice(1, ++i);\n            data = data.slice(i);\n            dataLen = data.byteLength;\n        }\n    }\n    key = cc32_salt_key(key, str2buf(salt));\n\n    if(dataLen & 3) {\n        data = str2buf(data);\n    }\n    else {\n        data = new Uint32Array(data.buffer);\n    }\n\n    let len = key.length;\n    let i = 0;\n    data = data.map((b) => {\n        if(i == len) i = 0;\n        if(!i) cc32_mix_key(key);\n        return b ^ key[i++];\n    });\n\n    data = new Uint8Array(data.buffer);\n\n    if(data.byteLength > dataLen) {\n        data = data.slice(0, dataLen);\n    }\n\n    if (ret) {\n        ret.set(data, ret[0] + 1);\n    }\n    else {\n        ret = data;\n    }\n    ret.toString = toString;\n\n    return ret;\n}\n\n/**\n * Use a variation of Xorshift+ to mix the key\n *\n * @param   Uint32Array $key List of int32 values representing the key\n * @param   int   $rounds Number of rounds to process the key\n *\n * @return  array A mixed key\n */\nfunction cc32_mix_key(key, rounds = 1) {\n    let len = key.length;\n    let k = len > 1 ? key[len - 1] : 0;\n    while (rounds-- > 0) {\n        for (let $i = len; $i--;) {\n            let ki = $i % len;\n            k = key[ki] + k;\n            k ^= k << 13; // 19\n            k ^= k >>> 17; // 15\n            k ^= k << 5; // 27\n            // k >>>= 0;\n            key[ki] = k;\n        }\n    }\n\n    return key;\n}\n\n/**\n * Use a variation of Xorshift+ to salt the key\n *\n * @param   Uint32Array $key\n * @param   Uint32Array $salt\n * @param   int   $rounds Number of rounds to mix the key\n *\n * @return  array A mixed key\n */\nfunction cc32_salt_key(key, salt, rounds = 1) {\n    let klen = key.length;\n    let slen = salt.length;\n    if (!slen) return key;\n\n    let k = klen > 1 ? key[klen - 1] : 0;\n    let s = slen > 1 ? salt[slen - 1] : 0;\n\n    while (rounds-- > 0) {\n        for (let i = Math.max(klen, slen); i--;) {\n            let ki = i % klen;\n            let si = i % slen;\n            k = key[ki] + k;\n            s = salt[si] + s;\n\n            s ^= s << 13; // 19\n            s ^= s >>> 7; // 25\n\n            k ^= k << 11; // 21\n            k ^= k >>> 8; // 24\n\n            // s >>>= 0;\n            k += s;\n            // k >>>= 0;\n\n            key[ki] = k;\n            salt[si] = s;\n        }\n    }\n\n    return key;\n}\n\nfunction str2buf(str) {\n    if (!str || typeof str.byteLength != 'number') {\n        str = str2buffer(str);\n    }\n\n    // Make sure the new buffer has a multiple of 4 byteLength\n    let b = str.byteLength & 3;\n    if(b) {\n        b = str.byteLength + 4 - b;\n        str = new Uint8Array(str.buffer);\n        let i = new Uint8Array(b);\n        i.set(str);\n        str = i;\n    }\n    return new Uint32Array(str.buffer);\n}\n\n// Unused\n// function buf2str(buf) {\n//     return buffer2str(new Uint8Array(buf.buffer));\n// }\n"],"names":["chr","String","fromCharCode","ord","charCodeAt","buffer2bin","buf","BYTES_PER_ELEMENT","Uint8Array","buffer","apply","buffer2hex","bpe","reduce","r","c","toString","padStart","buffer2str","asUtf8","isASCII","utf8Decode","undefined","err","str2buffer","str","hasMultibyte","utf8Encode","split","map","enc","btoa","hasMultibyteRE","isASCIIRE","m","exec","test","unescape","encodeURI","decodeURIComponent","escape","randomBytes","size","bits","len","ret","words","Uint32Array","ent","Date","now","Math","random","length","slice","cycleCrypt","key","data","salt","str2buf","dataLen","byteLength","min","i","cc32_salt_key","b","cc32_mix_key","set","rounds","k","$i","ki","klen","slen","s","max","si"],"mappings":";;;;;;IAAA;;IACA;IAEA,IAAMA,GAAG,GAAGC,MAAM,CAACC,YAAnB;;IAEA,SAASC,GAAT,CAAaH,GAAb,EAAkB;IACd,SAAOA,GAAG,CAACI,UAAJ,CAAe,CAAf,CAAP;IACH;;IAEM,SAASC,UAAT,CAAoBC,GAApB,EAAyB;IAC5B,MAAGA,GAAG,CAACC,iBAAJ,GAAwB,CAA3B,EAA8B;IAC1BD,IAAAA,GAAG,GAAG,IAAIE,UAAJ,CAAeF,GAAG,CAACG,MAAnB,CAAN;IACH;;IACD,SAAOT,GAAG,CAACU,KAAJ,CAAUT,MAAV,EAAkBK,GAAlB,CAAP;IACH;IAEM,SAASK,UAAT,CAAoBL,GAApB,EAAyB;IAC5B,MAAMM,GAAG,GAAGN,GAAG,CAACC,iBAAJ,IAAyB,CAArC;IACA,SAAOD,GAAG,CAACO,MAAJ,CAAW,UAACC,CAAD,EAAIC,CAAJ;IAAA,WAAUD,CAAC,IAAI,CAACC,CAAC,KAAK,CAAP,EAAUC,QAAV,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgCL,GAAhC,EAAoC,GAApC,CAAf;IAAA,GAAX,EAAoE,EAApE,CAAP;IACH;IAEM,SAASM,UAAT,CAAoBZ,GAApB,EAAyBa,MAAzB,EAAiC;IACpC,MAAG,OAAOb,GAAP,IAAc,QAAjB,EAA2B,OAAOA,GAAP;IAC3BA,EAAAA,GAAG,GAAGD,UAAU,CAACC,GAAD,CAAhB;;IACA,MAAIa,MAAM,KAAK,KAAX,IAAoB,CAACC,OAAO,CAACd,GAAD,CAAhC,EAAuC;IACnC,QAAGa,MAAH,EAAW;IACPb,MAAAA,GAAG,GAAGe,UAAU,CAACf,GAAD,CAAhB;IACH,KAFD,MAEO,IAAGa,MAAM,IAAIG,SAAb,EAAwB;IAC3B,UAAI;IACAhB,QAAAA,GAAG,GAAGe,UAAU,CAACf,GAAD,CAAhB;IACH,OAFD,CAEE,OAAMiB,GAAN,EAAW;IAChB;IACJ;;IACD,SAAOjB,GAAP;IACH;IAEM,SAASkB,UAAT,CAAoBC,GAApB,EAAyBN,MAAzB,EAAiC;IACpC,MAAGA,MAAM,IAAIG,SAAb,EAAwB;IACpB;IACAH,IAAAA,MAAM,GAAGO,YAAY,CAACD,GAAD,CAArB,CAFoB;IAGvB;;IACD,MAAIN,MAAJ,EAAY;IACRM,IAAAA,GAAG,GAAGE,UAAU,CAACF,GAAD,CAAhB;IACH;;IACD,SAAO,IAAIjB,UAAJ,CAAeiB,GAAG,CAACG,KAAJ,CAAU,EAAV,EAAcC,GAAd,CAAkB1B,GAAlB,CAAf,CAAP;IACH;IAED;;;;;;;;;IAQO,SAASa,QAAT,CAAkBc,GAAlB,EAAuB;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA,UAAOA,GAAP;IACI,SAAK,KAAL;IACA,SAAK,QAAL;IAAe,aAAOzB,UAAU,CAAC,IAAD,CAAjB;;IACf,SAAK,KAAL;IAAY,aAAOM,UAAU,CAAC,IAAD,CAAjB;;IACZ,SAAK,QAAL;IAAe,aAAOoB,IAAI,CAAC1B,UAAU,CAAC,IAAD,CAAX,CAAX;;IACf,SAAK,MAAL;IAAayB,MAAAA,GAAG,GAAG,IAAN;IAAY;IAL7B;;IAOA,SAAOZ,UAAU,CAAC,IAAD,EAAOY,GAAP,CAAjB;IACH;IAED,IAAME,cAAc,GAAG,iBAAvB;IACA,IAAMC,SAAS,GAAG,gBAAlB;IAEO,SAASP,YAAT,CAAsBD,GAAtB,EAA2B;IAC9B,MAAIS,CAAC,GAAGF,cAAc,CAACG,IAAf,CAAoBV,GAApB,CAAR;IACA,SAAOS,CAAC,GAAGA,CAAC,CAAC,CAAD,CAAJ,GAAU,KAAlB;IACH;IAEM,SAASd,OAAT,CAAiBK,GAAjB,EAAsB;IACzB,SAAOQ,SAAS,CAACG,IAAV,CAAeX,GAAf,CAAP;IACH;IAEM,SAASE,UAAT,CAAoBF,GAApB,EAAyB;IAC5B,SAAOY,QAAQ,CAACC,SAAS,CAACb,GAAD,CAAV,CAAf;IACH;IAEM,SAASJ,UAAT,CAAoBI,GAApB,EAAyB;IAC5B,SAAOc,kBAAkB,CAACC,MAAM,CAACf,GAAD,CAAP,CAAzB;IACH;;IC1FD;AAEA,IAEe,SAASgB,WAAT,CAAqBC,IAArB,EAA2B;IACtC,MAAMC,IAAI,GAAG,CAAC,CAAD,KAAO,CAApB;IAEA,MAAIC,GAAG,GAAGF,IAAI,GAAG,CAAjB;IACAE,EAAAA,GAAG,GAAGA,GAAG,GAAGF,IAAI,GAAG,CAAP,GAAWE,GAAd,GAAoBF,IAA7B;IACA,MAAIG,GAAG,GAAG,IAAIrC,UAAJ,CAAeoC,GAAf,CAAV;IACA,MAAME,KAAK,GAAG,IAAIC,WAAJ,CAAgBF,GAAG,CAACpC,MAApB,CAAd;IACA,MAAIuC,GAAG,GAAGC,IAAI,CAACC,GAAL,EAAV;IAEAN,EAAAA,GAAG,KAAK,CAAR;;IACA,SAAOA,GAAG,EAAV,EAAc;IACVE,IAAAA,KAAK,CAACF,GAAD,CAAL,GACAI,GAAG,IAAIG,IAAI,CAACC,MAAL,KAAgBT,IADvB;IAEH;;IAED,MAAGE,GAAG,CAACQ,MAAJ,GAAaX,IAAhB,EAAsB;IAClBG,IAAAA,GAAG,GAAGA,GAAG,CAACS,KAAJ,CAAU,CAAV,EAAaZ,IAAb,CAAN;IACH;;IAEDG,EAAAA,GAAG,CAAC7B,QAAJ,GAAeA,QAAf;IACA,SAAO6B,GAAP;IACH;;ICzBD;;IAOAU,UAAU,CAACd,WAAX,GAAyBA,WAAzB;IACAc,UAAU,CAAC/B,UAAX,GAAwBA,UAAxB;;IAGA;;;;;;;;;;;;;AAYA,IAAe,SAAS+B,UAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA4C;IAAA,MAAbC,IAAa,uEAAN,IAAM;IACvDF,EAAAA,GAAG,GAAGG,OAAO,CAACH,GAAD,CAAb;IACAC,EAAAA,IAAI,GAAG,OAAOA,IAAP,IAAe,QAAf,GAA0BjC,UAAU,CAACiC,IAAD,CAApC,GAA6CA,IAApD;IACA,MAAIG,OAAO,GAAGH,IAAI,CAACI,UAAnB;IAEA,MAAIhB,GAAJ;;IACA,MAAIa,IAAI,KAAK,IAAb,EAAmB;IACfb,IAAAA,GAAG,GAAGJ,WAAW,CAACU,IAAI,CAACW,GAAL,CAAS,GAAT,EAAcN,GAAG,CAACK,UAAJ,GAAiB,CAAjB,GAAqB,CAAnC,IAAwCD,OAAzC,CAAjB;IACAf,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAACQ,MAAJ,GAAa,CAAb,GAAiBO,OAA1B;IACAF,IAAAA,IAAI,GAAGb,GAAG,CAACS,KAAJ,CAAU,CAAV,EAAa,IAAIT,GAAG,CAAC,CAAD,CAApB,CAAP;IACH,GAJD,MAKK;IACD,QAAIa,IAAI,KAAK,KAAb,EAAoB;IAChB,UAAIK,EAAC,GAAGN,IAAI,CAAC,CAAD,CAAZ;IACAC,MAAAA,IAAI,GAAGD,IAAI,CAACH,KAAL,CAAW,CAAX,EAAc,EAAES,EAAhB,CAAP;IACAN,MAAAA,IAAI,GAAGA,IAAI,CAACH,KAAL,CAAWS,EAAX,CAAP;IACAH,MAAAA,OAAO,GAAGH,IAAI,CAACI,UAAf;IACH;IACJ;;IACDL,EAAAA,GAAG,GAAGQ,aAAa,CAACR,GAAD,EAAMG,OAAO,CAACD,IAAD,CAAb,CAAnB;;IAEA,MAAGE,OAAO,GAAG,CAAb,EAAgB;IACZH,IAAAA,IAAI,GAAGE,OAAO,CAACF,IAAD,CAAd;IACH,GAFD,MAGK;IACDA,IAAAA,IAAI,GAAG,IAAIV,WAAJ,CAAgBU,IAAI,CAAChD,MAArB,CAAP;IACH;;IAED,MAAImC,GAAG,GAAGY,GAAG,CAACH,MAAd;IACA,MAAIU,CAAC,GAAG,CAAR;IACAN,EAAAA,IAAI,GAAGA,IAAI,CAAC5B,GAAL,CAAS,UAACoC,CAAD,EAAO;IACnB,QAAGF,CAAC,IAAInB,GAAR,EAAamB,CAAC,GAAG,CAAJ;IACb,QAAG,CAACA,CAAJ,EAAOG,YAAY,CAACV,GAAD,CAAZ;IACP,WAAOS,CAAC,GAAGT,GAAG,CAACO,CAAC,EAAF,CAAd;IACH,GAJM,CAAP;IAMAN,EAAAA,IAAI,GAAG,IAAIjD,UAAJ,CAAeiD,IAAI,CAAChD,MAApB,CAAP;;IAEA,MAAGgD,IAAI,CAACI,UAAL,GAAkBD,OAArB,EAA8B;IAC1BH,IAAAA,IAAI,GAAGA,IAAI,CAACH,KAAL,CAAW,CAAX,EAAcM,OAAd,CAAP;IACH;;IAED,MAAIf,GAAJ,EAAS;IACLA,IAAAA,GAAG,CAACsB,GAAJ,CAAQV,IAAR,EAAcZ,GAAG,CAAC,CAAD,CAAH,GAAS,CAAvB;IACH,GAFD,MAGK;IACDA,IAAAA,GAAG,GAAGY,IAAN;IACH;;IACDZ,EAAAA,GAAG,CAAC7B,QAAJ,GAAeA,QAAf;IAEA,SAAO6B,GAAP;IACH;IAED;;;;;;;;;IAQA,SAASqB,YAAT,CAAsBV,GAAtB,EAAuC;IAAA,MAAZY,MAAY,uEAAH,CAAG;IACnC,MAAIxB,GAAG,GAAGY,GAAG,CAACH,MAAd;IACA,MAAIgB,CAAC,GAAGzB,GAAG,GAAG,CAAN,GAAUY,GAAG,CAACZ,GAAG,GAAG,CAAP,CAAb,GAAyB,CAAjC;;IACA,SAAOwB,MAAM,KAAK,CAAlB,EAAqB;IACjB,SAAK,IAAIE,EAAE,GAAG1B,GAAd,EAAmB0B,EAAE,EAArB,GAA0B;IACtB,UAAIC,EAAE,GAAGD,EAAE,GAAG1B,GAAd;IACAyB,MAAAA,CAAC,GAAGb,GAAG,CAACe,EAAD,CAAH,GAAUF,CAAd;IACAA,MAAAA,CAAC,IAAIA,CAAC,IAAI,EAAV,CAHsB;;IAItBA,MAAAA,CAAC,IAAIA,CAAC,KAAK,EAAX,CAJsB;;IAKtBA,MAAAA,CAAC,IAAIA,CAAC,IAAI,CAAV,CALsB;IAMtB;;IACAb,MAAAA,GAAG,CAACe,EAAD,CAAH,GAAUF,CAAV;IACH;IACJ;;IAED,SAAOb,GAAP;IACH;IAED;;;;;;;;;;;IASA,SAASQ,aAAT,CAAuBR,GAAvB,EAA4BE,IAA5B,EAA8C;IAAA,MAAZU,MAAY,uEAAH,CAAG;IAC1C,MAAII,IAAI,GAAGhB,GAAG,CAACH,MAAf;IACA,MAAIoB,IAAI,GAAGf,IAAI,CAACL,MAAhB;IACA,MAAI,CAACoB,IAAL,EAAW,OAAOjB,GAAP;IAEX,MAAIa,CAAC,GAAGG,IAAI,GAAG,CAAP,GAAWhB,GAAG,CAACgB,IAAI,GAAG,CAAR,CAAd,GAA2B,CAAnC;IACA,MAAIE,CAAC,GAAGD,IAAI,GAAG,CAAP,GAAWf,IAAI,CAACe,IAAI,GAAG,CAAR,CAAf,GAA4B,CAApC;;IAEA,SAAOL,MAAM,KAAK,CAAlB,EAAqB;IACjB,SAAK,IAAIL,CAAC,GAAGZ,IAAI,CAACwB,GAAL,CAASH,IAAT,EAAeC,IAAf,CAAb,EAAmCV,CAAC,EAApC,GAAyC;IACrC,UAAIQ,EAAE,GAAGR,CAAC,GAAGS,IAAb;IACA,UAAII,EAAE,GAAGb,CAAC,GAAGU,IAAb;IACAJ,MAAAA,CAAC,GAAGb,GAAG,CAACe,EAAD,CAAH,GAAUF,CAAd;IACAK,MAAAA,CAAC,GAAGhB,IAAI,CAACkB,EAAD,CAAJ,GAAWF,CAAf;IAEAA,MAAAA,CAAC,IAAIA,CAAC,IAAI,EAAV,CANqC;;IAOrCA,MAAAA,CAAC,IAAIA,CAAC,KAAK,CAAX,CAPqC;;IASrCL,MAAAA,CAAC,IAAIA,CAAC,IAAI,EAAV,CATqC;;IAUrCA,MAAAA,CAAC,IAAIA,CAAC,KAAK,CAAX,CAVqC;IAYrC;;IACAA,MAAAA,CAAC,IAAIK,CAAL,CAbqC;;IAgBrClB,MAAAA,GAAG,CAACe,EAAD,CAAH,GAAUF,CAAV;IACAX,MAAAA,IAAI,CAACkB,EAAD,CAAJ,GAAWF,CAAX;IACH;IACJ;;IAED,SAAOlB,GAAP;IACH;;IAED,SAASG,OAAT,CAAiBlC,GAAjB,EAAsB;IAClB,MAAI,CAACA,GAAD,IAAQ,OAAOA,GAAG,CAACoC,UAAX,IAAyB,QAArC,EAA+C;IAC3CpC,IAAAA,GAAG,GAAGD,UAAU,CAACC,GAAD,CAAhB;IACH,GAHiB;;;IAMlB,MAAIwC,CAAC,GAAGxC,GAAG,CAACoC,UAAJ,GAAiB,CAAzB;;IACA,MAAGI,CAAH,EAAM;IACFA,IAAAA,CAAC,GAAGxC,GAAG,CAACoC,UAAJ,GAAiB,CAAjB,GAAqBI,CAAzB;IACAxC,IAAAA,GAAG,GAAG,IAAIjB,UAAJ,CAAeiB,GAAG,CAAChB,MAAnB,CAAN;IACA,QAAIsD,CAAC,GAAG,IAAIvD,UAAJ,CAAeyD,CAAf,CAAR;IACAF,IAAAA,CAAC,CAACI,GAAF,CAAM1C,GAAN;IACAA,IAAAA,GAAG,GAAGsC,CAAN;IACH;;IACD,SAAO,IAAIhB,WAAJ,CAAgBtB,GAAG,CAAChB,MAApB,CAAP;IACH;IAGD;IACA;IACA;;;;;;;;"}